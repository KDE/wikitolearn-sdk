#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import os,sys
sys.path.insert(0, os.path.realpath(os.path.dirname(os.path.abspath(__file__)) + "/../pythonlibs/"))
from basicsetup import *

for service_name in get_services_to_manage():
    if service_name in config['repositories']:
        service_path = WTL_DEV_KIT_REPOS_PATH + "/" + service_name
        print("Build '{service_name}'".format(service_name=service_name))
        if not os.path.isdir(service_path):
            clone_cmd = [
                "git",
                "clone",
                config['repositories'][service_name]['git'],
                service_path
            ]
            if 'git_branch' in config['repositories'][service_name]:
                clone_cmd.append("-b")
                clone_cmd.append(config['repositories'][service_name]['git_branch'])
            subprocess.call(clone_cmd)
        subprocess.call([
            "git",
            "pull",
        ], cwd=service_path)

        docker_compose_command = [
            "docker-compose",
            "-f","docker-compose.yml",
        ]
        if os.path.isfile(service_path + "/" + "docker-compose-dev-deps.yml"):
            docker_compose_command.append("-f")
            docker_compose_command.append("docker-compose-dev-deps.yml")
        docker_compose_command.append("build")

        if subprocess.call(docker_compose_command, cwd=service_path, env=os.environ.copy()) != 0:
            raise Exception("{} failed".format(docker_compose_command))
